package programacionv;

import java.util.ArrayList;

/**
 *
 * @author mikillo
 */
public class Programacion_C2 {

    static ArrayList<Integer> lista = new ArrayList<Integer>();

    /**
     * (79,53 ,40 ,18 ,43 ,75 ,95 ,2 ,58 ,30 ,89 ,81 ,80 ,23 ,66 ,5 ,40 ,81 ,80
     * ,18 ,26 ,81 ,81 ,85 ,93 ,61 ,80 ,50 ,26 ,85 ,8 ,30 ,29 ,56 ,55 ,18 ,25
     * ,33 ,81 ,10 ,70 ,62 ,68 ,13 ,72 ,29 ,8 ,25 ,71 ,87 ,51 ,40 ,37 ,39 ,18
     * ,85 ,39 ,74 ,26 ,1 ,3 ,92 ,21 ,40 ,55 ,92 ,60 ,8 ,82 ,50 ,44 ,95 ,49 ,86
     * ,70 ,88 ,87 ,35 ,83 ,78 ,30 ,38 ,4 ,63 ,68 ,2 ,68 ,16 ,22 ,36 ,14 ,57 ,33
     * ,40 ,87 ,43 ,20 ,29 ,65 ,27 ,92);
     */
    static int cont = 0;
    static int posicion = 0;
    static int aux1 = 0;
    static int aux2 = 0;
    static int maximo = 0;
    static int actual = 0;
    static int tamano = 0;

    public static void main(String args[]) {
        lista.add(79);
        lista.add(53);
        lista.add(40);
        lista.add(18);
        lista.add(43);
        lista.add(75);
        lista.add(95);
        lista.add(2);
        lista.add(58);
        lista.add(30);
        lista.add(89);
        lista.add(81);
        lista.add(80);
        lista.add(23);
        lista.add(66);
        lista.add(5);
        lista.add(40);
        lista.add(81);
        lista.add(80);

        recorrer();
    }

    public static void recorrer() {

        tamano = lista.size();
        
        if (cont < tamano -1) {

            if (cont == 0) {
                actual = lista.get(posicion);               
            }

            System.out.println("Valor a evaluar " + actual + " contador:" + cont + " Valor a comparar = "+lista.get(cont+1)+" TamaÃ±o del vector : " + tamano);

            if (lista.get(cont + 1).compareTo(actual) == 0) {
                aux1++;
                System.out.println(" valores comparados-> " + actual + " eliminado->" + lista.get(cont + 1));
                lista.remove(cont + 1);
            }
            cont++;

        } else {
            if (aux1 > aux2) {
                aux2 = aux1;
                aux1 = 0;
                maximo = actual;
                System.out.println("Valor maximo temporal: " + maximo);
            }            
            cont = 0;
            posicion++;
        }

       
        if (posicion < tamano - 1) {
            recorrer();
        } else {
            System.out.println("Valor maximo final: " + maximo);
        }
    }

}
